name: tests

on:
  push:
  schedule:
    - cron:  '0 2 * * *'

jobs:
  Checks:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        target: [black, isort, pylint, mypy]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Determine exact Python version
      run:
        echo "PYTHON_VERSION=$(python -c 'import platform; print(platform.python_version())')" >> $GITHUB_ENV
    - name: Cache Python dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pip
          ~/.local/lib/python${{ matrix.python-version }}/site-packages
          ~/.local/bin
        key: ${{ runner.os }}-python${{ env.PYTHON_VERSION }}-${{ hashFiles('**/setup.py') }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --user -e .[devel]
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        echo "PYTHONPATH=$PWD" >> $GITHUB_ENV
    - name: Check
      run: |
        make check_${{ matrix.target }}

  Installation:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
    - name: Install
      run: |
        python setup.py sdist
        pip install valens --user --no-deps --no-index --find-links dist/

  Tests:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Determine exact Python version
      run:
        echo "PYTHON_VERSION=$(python -c 'import platform; print(platform.python_version())')" >> $GITHUB_ENV
    - name: Cache Python dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pip
          ~/.local/lib/python${{ matrix.python-version }}/site-packages
          ~/.local/bin
        key: ${{ runner.os }}-python${{ env.PYTHON_VERSION }}-${{ hashFiles('**/setup.py') }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --user -e .[devel]
        mkdir $HOME/bin
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        echo "PYTHONPATH=$PWD" >> $GITHUB_ENV
    - name: Test
      run: |
        make test
